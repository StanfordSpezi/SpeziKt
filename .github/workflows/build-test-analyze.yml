#
# This source file is part of the Stanford Spezi open-source project
#
# SPDX-FileCopyrightText: 2024 Stanford University
#
# SPDX-License-Identifier: MIT
#

name: Build, Test and Analyze

on:
  workflow_dispatch:
  workflow_call:

jobs:
  detekt:
    name: Detekt review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: Detekt PR Check
        uses: alaegin/Detekt-Action@v1.23.6
        with:
          reviewdog_reporter: github-pr-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true
          detekt_config: internal/detekt-config.yml
  buildtestandanalyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin
          build-mode: manual
      - name: Build and Test
        run: bundle exec fastlane test
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java-kotlin"
      - name: Upload JaCoCo report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: '**/build/reports/jacoco/jacocoCoverageReport/jacocoCoverageReport.xml'
          flags: unittests
          name: codecov-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
  test:
    name: Instrumented tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        api-level: [31, 34]
        profile: ["pixel_6"]
        target: ["default", "google_apis"]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.profile }}
      - name: Create AVD and Generate Snapshot for Caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            sdkmanager --list
            avdmanager list devices
      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: bundle exec fastlane connectedCheck
      - name: Upload JaCoCo report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: '**/build/reports/coverage/androidTest/debug/connected/index.html'
          flags: uitests
          name: codecov-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
  dokka:
    name: Dokka Documentation Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run Dokka with Gradle
        run: ./gradlew dokkaHtmlMultiModule
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build/dokka/htmlMultiModule
